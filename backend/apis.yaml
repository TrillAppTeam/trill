openapi: 3.0.0
info:
  description: Click the lock icon to set the access token.
  version: 1.0.0-oas3
  title: Trill APIs
tags:
  - name: users
  - name: follows
  - name: albums
  - name: reviews
  - name: likes
    description: review likes
  - name: favorite albums
  - name: listen later albums
paths:
  /users:
    get:
      tags:
        - users
      description: Get user information based on access token user
      operationId: getUser
      security:
        - AccessToken: []
      parameters:
        - name: username
          in: query
          description: >-
            username to get (empty if username = user making the request and you
            are attempting to get email)
          schema:
            type: string
        - name: search
          in: query
          description: >-
            username to search for (optional, not to be used with the username
            query parameter)
          schema:
            type: string
      responses:
        '200':
          description: user info
        '403':
          description: forbidden
        '404':
          description: user not found
        '405':
          description: invalid http method
        '500':
          description: error
    put:
      tags:
        - users
      description: Update user info.
      operationId: updateUser
      security:
        - AccessToken: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                bio:
                  type: string
                profilePicture:
                  type: string
                  format: binary
      responses:
        '200':
          description: success
        '400':
          description: invalid request body
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
  /follows:
    get:
      tags:
        - follows
      operationId: getFollows
      security:
        - AccessToken: []
      parameters:
        - name: type
          in: query
          description: getFollowers or getFollowing
          required: true
          schema:
            type: string
            default: getFollowers
        - name: username
          in: query
          required: true
          schema:
            type: string
            default: cathychian
      responses:
        '200':
          description: list of followers or following
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
    post:
      tags:
        - follows
      operationId: createFollow
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: username
          description: user to follow
          schema:
            type: string
            default: cathychian
      responses:
        '201':
          description: follow added to database
        '400':
          description: invalid request
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
    delete:
      tags:
        - follows
      operationId: deleteFollow
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: username
          description: user to unfollow
          schema:
            type: string
            default: cathychian
      responses:
        '200':
          description: follow deleted from database
        '400':
          description: invalid request
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
  /albums:
    get:
      tags:
        - albums
      operationId: getAlbums
      security:
        - AccessToken: []
      parameters:
        - name: albumID
          in: query
          description: Spotify album ID (if getting single album)
          schema:
            type: string
            default: 4aawyAB9vmqN3uQ7FjRGTy
        - name: query
          in: query
          description: Search query (if searching)
          schema:
            type: string
        - name: timespan
          in: query
          description: daily, weekly, monthly, yearly, or all (for most popular albums)
          schema:
            type: string
      responses:
        '200':
          description: success
        '204':
          description: >-
            no content (for most popular albums if no reviews in timespan
            specified))
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
  /reviews:
    get:
      tags:
        - reviews
      operationId: getReview
      description: >-
        __Specific to one album__ <br> • Current user's review for album -
        *albumID* (doesn't return array) <br> • Username's review for album -
        *albumID* and *username* (doesn't return array) <br> • Current user's
        followed user's reviews for album - *sort*, *albumID*, and
        *following*=*true* <br> • All reviews for album - *sort* and *albumID*
        <br><br> __All reviews__ <br> • All reviews by current user - *sort*
        <br> • All reviews by username - *sort* and *username* <br> • All
        reviews by current user's followed users - *sort*, and
        *following*=*true* <br><br> Any other combination will probably have
        unintended results.
      security:
        - AccessToken: []
      parameters:
        - name: sort
          description: popular, newest, or oldest
          in: query
          schema:
            type: string
            default: popular
        - name: albumID
          in: query
          description: Spotify album ID
          schema:
            type: string
        - name: username
          in: query
          schema:
            type: string
        - name: following
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: success
        '204':
          description: no content
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
    put:
      tags:
        - reviews
      operationId: createReview
      security:
        - AccessToken: []
      parameters:
        - name: albumID
          in: query
          required: true
          schema:
            type: string
            default: 4aawyAB9vmqN3uQ7FjRGTy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReview'
        description: review_text is optional
      responses:
        '201':
          description: added to database
        '400':
          description: invalid request
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
    delete:
      tags:
        - reviews
      operationId: deleteReview
      security:
        - AccessToken: []
      parameters:
        - name: albumID
          in: query
          required: true
          schema:
            type: string
            default: 4aawyAB9vmqN3uQ7FjRGTy
      responses:
        '200':
          description: deleted from database
        '400':
          description: invalid request
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
  /likes:
    get:
      tags:
        - likes
      operationId: getLikeCount
      description: Get like count for review
      security:
        - AccessToken: []
      parameters:
        - name: reviewID
          in: query
          required: true
          schema:
            type: string
            default: 789
      responses:
        '200':
          description: success
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
    put:
      tags:
        - likes
      operationId: likeReview
      security:
        - AccessToken: []
      parameters:
        - name: reviewID
          in: query
          required: true
          schema:
            type: string
            default: 789
      responses:
        '201':
          description: added to database
        '400':
          description: invalid request
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
    delete:
      tags:
        - likes
      operationId: unlikeReview
      security:
        - AccessToken: []
      parameters:
        - name: reviewID
          in: query
          required: true
          schema:
            type: string
            default: 789
      responses:
        '200':
          description: deleted from database
        '400':
          description: invalid request
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
  /favoritealbums:
    get:
      tags:
        - favorite albums
      operationId: getFavoriteAlbums
      security:
        - AccessToken: []
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
            default: cathychian
      responses:
        '200':
          description: success
        '204':
          description: no favorite albums
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
    post:
      tags:
        - favorite albums
      operationId: addFavoriteAlbums
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: albumID
          description: Spotify album ID
          schema:
            type: string
            default: 4aawyAB9vmqN3uQ7FjRGTy
      responses:
        '201':
          description: added to database
        '400':
          description: invalid request
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
    delete:
      tags:
        - favorite albums
      operationId: deleteFavoriteAlbums
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: albumID
          description: Spotify album ID
          schema:
            type: string
            default: 4aawyAB9vmqN3uQ7FjRGTy
      responses:
        '200':
          description: deleted from database
        '400':
          description: invalid request
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
  /listenlateralbums:
    get:
      tags:
        - listen later albums
      operationId: create
      security:
        - AccessToken: []
      responses:
        '200':
          description: success
        '204':
          description: no albums in Listen Later
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
    post:
      tags:
        - listen later albums
      operationId: addListenLaterAlbums
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: albumID
          description: Spotify album ID
          schema:
            type: string
            default: 4aawyAB9vmqN3uQ7FjRGTy
      responses:
        '201':
          description: added to database
        '400':
          description: invalid request
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '409':
          description: album already reviewed
        '500':
          description: error
    delete:
      tags:
        - listen later albums
      operationId: deleteListenLaterAlbums
      security:
        - AccessToken: []
      parameters:
        - in: query
          name: albumID
          description: Spotify album ID
          schema:
            type: string
            default: 4aawyAB9vmqN3uQ7FjRGTy
      responses:
        '200':
          description: deleted from database
        '400':
          description: invalid request
        '403':
          description: forbidden
        '405':
          description: invalid http method
        '500':
          description: error
servers:
  - url: https://api.trytrill.com/main
  - url: https://api.trytrill.com/upload-image-api
components:
  securitySchemes:
    AccessToken:
      type: apiKey
      name: Authorization
      in: header
      description: Enter the token with the `Bearer` prefix, e.g. "Bearer eyJraWQ...".
  schemas:
    CreateReview:
      type: object
      required:
        - rating
        - review_text
      properties:
        rating:
          type: integer
          example: 7
        review_text:
          type: string
          example: i hated it